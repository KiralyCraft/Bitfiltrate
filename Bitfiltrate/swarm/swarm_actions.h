/*
 * swarm_actions.h
 *
 *  Created on: May 31, 2023
 *      Author: kiraly
 */

#ifndef SWARM_SWARM_ACTIONS_H_
#define SWARM_SWARM_ACTIONS_H_

#include "swarm.h"

/*
 * Given a swarm and a specific peer (generated by the swarm definition), it attempts to handshake the peer.
 *
 * This method returns 0 if anything went wrong, or 1 otherwise.
 */
uint8_t swarm_connectPeer(swarm_t* __theSwarm,void* __genericPeerRepresentation);

/*
 * DO NOT USE
 * This method is invoked upon the swarm and has the purpose of triggering all clients to connect and handshake.
 * Given that in a swarm, clients are initially added unconnected, this task triggers a handshake for all of them that are not connected (nor initialized)
 *
 * If this function fails, it returns the number of peers who could not have their connect request submitted to.
 */
size_t swarm_connectAll(swarm_t* __theSwarm);
/*
 * I can't remember what this is supposed to do.
 */
void swarm_cleanupAll();
/*
 * Removes and cleans all peers from the pool.
 */
void swarm_destroyAll();
/*
 * This method broadcasts a message to all peers.
 *
 * In case of failure, this function returns the number of peers that have failed to accept the packet in the queue.
 * Note that this does not indicate a failure of transmission, but rather a failure of acceptance towards transmission.
 *
 * In case of success, this function returns 0.
 */
size_t swarm_broadcast(swarm_t* __theSwarm,void* __genericPacketData);

#endif /* SWARM_SWARM_ACTIONS_H_ */
